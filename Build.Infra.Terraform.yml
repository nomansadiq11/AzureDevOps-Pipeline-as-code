pool:
    name: Azure Pipelines
  steps:
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
    displayName: 'Install Terraform 0.12.3'
  
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : azurerm'
    inputs:
      backendServiceArm: ''
      backendAzureRmResourceGroupName: ForTerraformStates
      backendAzureRmStorageAccountName: manageterraformstates
      backendAzureRmContainerName: terraformprojectsstates
      backendAzureRmKey: applepaytest.terraform.tfstate
  
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : azurerm Plan'
    inputs:
      command: plan
      environmentServiceNameAzureRM: ''
      backendServiceArm: ''
      backendAzureRmResourceGroupName: ForTerraformStates
      backendAzureRmStorageAccountName: manageterraformstates
      backendAzureRmContainerName: terraformprojectsstates
      backendAzureRmKey: demowebsite
  
  - task: ms-devlabs.custom-terraform-tasks.custom-terraform-release-task.TerraformTaskV1@0
    displayName: 'Terraform : azurerm Apply'
    inputs:
      command: apply
      environmentServiceNameAzureRM: ''
      backendServiceArm: ''
      backendAzureRmResourceGroupName: ForTerraformStates
      backendAzureRmStorageAccountName: manageterraformstates
      backendAzureRmContainerName: terraformprojectsstates
      backendAzureRmKey: demowebsite
  